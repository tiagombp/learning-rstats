title = NULL
) +
#geom_text(aes(label = Ano), x = 1, y = 0.05, size = 5) +
tema() +
theme(legend.position = 'none') + theme(axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank())
plot_estatico2
anim = plot_estatico2 + transition_states(Ano, transition_length = 4, state_length = 1) +
view_follow(fixed_x = TRUE)  +
labs(title = 'Despesas da União : {closest_state}',
subtitle  =  "Em percentual do PIB",
caption  = "Fonte: Siafi")
animate(anim, 200, fps = 20,  width = 1200, height = 1000,
renderer = gifski_renderer("gganim.gif"))
anim = plot_estatico2 + transition_states(Ano, transition_length = 4, state_length = 1) +
labs(title = 'Despesas da União : {closest_state}',
subtitle  =  "Em percentual do PIB",
caption  = "Fonte: Siafi")
animate(anim, 120, fps = 20,  width = 488, height = 688,
renderer = gifski_renderer("gganim.gif"))
tema <- function(){
theme_minimal() +
theme(
text = element_text(family = "Open Sans", colour = "grey20"),
axis.text = element_text(family = "Open Sans", colour = "grey20", size = 16),
title = element_text(face = "bold", size = 20), # size para o Shiny
plot.subtitle = element_text(family = "Open Sans Condensed", face = "plain", size = 16, color = "#1E4C7A"),
plot.caption = element_text(face = "italic"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18),
axis.ticks = element_line(size = 0.5),
axis.ticks.length = unit(.25, "cm"),
axis.title = element_text(size = 16),
legend.position = 'bottom')
}
plot_estatico2 <- ggplot(dados_format, aes(y = Valor, x = rank)) +
geom_bar(aes(fill = CoresNormais), stat = 'identity') +
# geom_tile(aes(y = inicial, color = CoresEscuras), width = 0.9, height = 0.00001, linetype = 'dotted') +
# geom_tile(aes(y = final, color = CoresEscuras), width = 0.9, height = 0.00001) +
geom_text(aes(y = Valor + 0.005,
label = percent(round(Valor, 4)),
color = CoresEscuras), # color = CoresEscuras
position = position_dodge(1),
size = 6, family = "Open Sans Condensed Light", vjust = 'center') +  # color = '#1E4C7A') +
# geom_text(aes(y = ifelse(Categoria == "Benefícios Previdenciários RGPS", inicial, NA)),
#           x = qde_categorias + 0.8,
#           label = min(dados_plot$Ano),
#           vjust = "top", hjust = "center", color = "grey50",
#           family = "Open Sans", size = 4.5) +
# geom_text(aes(y = ifelse(Categoria == "Benefícios Previdenciários RGPS", final, NA)),
#           x = qde_categorias + 0.8,
#           label = max(dados_plot$Ano),
#           vjust = "top", hjust = "center", color = "grey50",
#           family = "Open Sans", size = 4.5) +
geom_text(aes(y=0, label = paste(Categoria_reduzida, " ")),
vjust = 0.2, hjust = 1, check_overlap = TRUE, family = "Open Sans", size = 4) +
coord_flip(clip = "off") +
scale_y_continuous(labels = percent, expand = expand_scale(add = c(0.2,0))) +
scale_x_reverse() +
scale_fill_identity() +
scale_color_identity() +
#scale_color_manual(values = paleta_darker) +
#scale_fill_manual(values = paleta) +
labs(
x = NULL,
y = NULL,
title = NULL
) +
#geom_text(aes(label = Ano), x = 1, y = 0.05, size = 5) +
tema() +
theme(legend.position = 'none') + theme(axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank())
anim = plot_estatico2 + transition_states(Ano, transition_length = 4, state_length = 1) +
labs(title = 'Despesas da União : {closest_state}',
subtitle  =  "Em percentual do PIB",
caption  = "Fonte: Siafi")
animate(anim, nframes = 120, width = 488, height = 688,
renderer = gifski_renderer())
tema <- function(){
theme_minimal() +
theme(
text = element_text(family = "Open Sans", colour = "grey20"),
axis.text = element_text(family = "Open Sans", colour = "grey20", size = 16),
title = element_text(face = "bold", size = 18), # size para o Shiny
plot.subtitle = element_text(family = "Open Sans Condensed", face = "plain", size = 16, color = "#1E4C7A"),
plot.caption = element_text(face = "italic"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18),
axis.ticks = element_line(size = 0.5),
axis.ticks.length = unit(.25, "cm"),
axis.title = element_text(size = 16),
legend.position = 'bottom')
}
plot_estatico2 <- ggplot(dados_format, aes(y = Valor, x = rank)) +
geom_bar(aes(fill = CoresNormais), stat = 'identity') +
# geom_tile(aes(y = inicial, color = CoresEscuras), width = 0.9, height = 0.00001, linetype = 'dotted') +
# geom_tile(aes(y = final, color = CoresEscuras), width = 0.9, height = 0.00001) +
geom_text(aes(y = Valor + 0.005,
label = percent(round(Valor, 4)),
color = CoresEscuras), # color = CoresEscuras
position = position_dodge(1),
size = 6, family = "Open Sans Condensed Light", vjust = 'center') +  # color = '#1E4C7A') +
# geom_text(aes(y = ifelse(Categoria == "Benefícios Previdenciários RGPS", inicial, NA)),
#           x = qde_categorias + 0.8,
#           label = min(dados_plot$Ano),
#           vjust = "top", hjust = "center", color = "grey50",
#           family = "Open Sans", size = 4.5) +
# geom_text(aes(y = ifelse(Categoria == "Benefícios Previdenciários RGPS", final, NA)),
#           x = qde_categorias + 0.8,
#           label = max(dados_plot$Ano),
#           vjust = "top", hjust = "center", color = "grey50",
#           family = "Open Sans", size = 4.5) +
geom_text(aes(y=0, label = paste(Categoria_reduzida, " ")),
vjust = 0.2, hjust = 1, check_overlap = TRUE, family = "Open Sans", size = 4) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = percent) + #expand = expand_scale(add = c(0.2,0)
scale_x_reverse() +
scale_fill_identity() +
scale_color_identity() +
#scale_color_manual(values = paleta_darker) +
#scale_fill_manual(values = paleta) +
labs(
x = NULL,
y = NULL,
title = NULL
) +
#geom_text(aes(label = Ano), x = 1, y = 0.05, size = 5) +
tema() +
theme(legend.position = 'none') + theme(axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank())
anim = plot_estatico2 + transition_states(Ano, transition_length = 4, state_length = 1) +
labs(title = 'Despesas da União : {closest_state}',
subtitle  =  "Em percentual do PIB",
caption  = "Fonte: Siafi")
animate(anim, nframes = 120, width = 688, height = 488,
renderer = gifski_renderer())
tema()
tema <- function(){
theme_minimal() +
theme(
text = element_text(family = "Open Sans", colour = "grey20"),
axis.text = element_text(family = "Open Sans", colour = "grey20", size = 16),
title = element_text(face = "plain", size = 18), # size para o Shiny
plot.subtitle = element_text(family = "Open Sans Condensed", face = "plain", size = 16, color = "#1E4C7A"),
plot.caption = element_text(face = "italic"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18),
axis.ticks = element_line(size = 0.5),
axis.ticks.length = unit(.25, "cm"),
axis.title = element_text(size = 16),
legend.position = 'bottom')
}
plot_estatico2 <- ggplot(dados_format, aes(y = Valor, x = rank)) +
geom_bar(aes(fill = CoresNormais), stat = 'identity') +
geom_tile(aes(y = inicial, color = CoresEscuras), width = 0.9, height = 0.00001, linetype = 'dotted') +
geom_tile(aes(y = final, color = CoresEscuras), width = 0.9, height = 0.00001) +
geom_text(aes(y = Valor + 0.005,
label = percent(round(Valor, 4)),
color = CoresEscuras), # color = CoresEscuras
position = position_dodge(1),
size = 6, family = "Open Sans Condensed Light", vjust = 'center') +  # color = '#1E4C7A') +
geom_text(aes(y=0, label = paste(Categoria_reduzida, " ")),
vjust = 0.2, hjust = 1, check_overlap = TRUE, family = "Open Sans", size = 4) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = percent, expand = expand_scale(add = c(0.2,0))) +
scale_x_reverse() +
scale_fill_identity() +
scale_color_identity() +
labs(
x = NULL,
y = NULL,
title = NULL
) +
#geom_text(aes(label = Ano), x = 1, y = 0.05, size = 5) +
tema() +
theme(legend.position = 'none') + theme(axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank())
anim = plot_estatico2 + transition_states(Ano, transition_length = 4, state_length = 1) +
labs(title = 'Despesas da União : {closest_state}',
subtitle  =  "Em percentual do PIB",
caption  = "Fonte: Siafi") +
ease_aes('quadratic')
animate(anim, nframes = 120, width = 688, height = 488,
renderer = gifski_renderer())
anim = plot_estatico2 + transition_states(Ano, transition_length = 4, state_length = 1) +
labs(title = 'Despesas da União : {closest_state}',
subtitle  =  "Em percentual do PIB",
caption  = "Fonte: Siafi") +
ease_aes('cubic-in-out')
animate(anim, nframes = 120, width = 688, height = 488,
renderer = gifski_renderer())
plot_estatico2 <- ggplot(dados_format, aes(y = Valor, x = rank)) +
geom_bar(aes(fill = CoresNormais), stat = 'identity') +
geom_text(aes(y = Valor + 0.005,
label = percent(round(Valor, 4)),
color = CoresEscuras), # color = CoresEscuras
position = position_dodge(1),
size = 6, family = "Open Sans Condensed Light", vjust = 'center') +  # color = '#1E4C7A') +
geom_text(aes(y=0, label = paste(Categoria_reduzida, " ")),
vjust = 0.2, hjust = 1, check_overlap = TRUE, family = "Open Sans", size = 4) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = percent) + #, expand = expand_scale(add = c(0.2,0)
scale_x_reverse() +
scale_fill_identity() +
scale_color_identity() +
labs(
x = NULL,
y = NULL,
title = NULL
) +
#geom_text(aes(label = Ano), x = 1, y = 0.05, size = 5) +
tema() +
theme(legend.position = 'none') + theme(axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
plot.margin = margin(0, 0, 0, 2, "cm"))
plot_estatico2
plot_estatico2 <- ggplot(dados_format, aes(y = Valor, x = rank)) +
geom_bar(aes(fill = CoresNormais), stat = 'identity') +
geom_text(aes(y = Valor + 0.005,
label = percent(round(Valor, 4)),
color = CoresEscuras), # color = CoresEscuras
position = position_dodge(1),
size = 6, family = "Open Sans Condensed Light", vjust = 'center') +  # color = '#1E4C7A') +
geom_text(aes(y=0, label = paste(Categoria_reduzida, " ")),
vjust = 0.2, hjust = 1, check_overlap = TRUE, family = "Open Sans", size = 4) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = percent) + #, expand = expand_scale(add = c(0.2,0)
scale_x_reverse() +
scale_fill_identity() +
scale_color_identity() +
labs(
x = NULL,
y = NULL,
title = NULL
) +
#geom_text(aes(label = Ano), x = 1, y = 0.05, size = 5) +
tema() +
theme(legend.position = 'none') + theme(axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
plot.margin = margin(0, 0, 0, 4, "cm"))
plot_estatico2
plot_estatico2 <- ggplot(dados_format, aes(y = Valor, x = rank)) +
geom_bar(aes(fill = CoresNormais), stat = 'identity') +
geom_text(aes(y = Valor + 0.005,
label = percent(round(Valor, 4)),
color = CoresEscuras), # color = CoresEscuras
position = position_dodge(1),
size = 6, family = "Open Sans Condensed Light", vjust = 'center') +  # color = '#1E4C7A') +
geom_text(aes(y=0, label = paste(Categoria_reduzida, " ")),
vjust = 0.2, hjust = 1, check_overlap = TRUE, family = "Open Sans", size = 4) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = percent) + #, expand = expand_scale(add = c(0.2,0)
scale_x_reverse() +
scale_fill_identity() +
scale_color_identity() +
labs(
x = NULL,
y = NULL,
title = NULL
) +
#geom_text(aes(label = Ano), x = 1, y = 0.05, size = 5) +
tema() +
theme(legend.position = 'none') + theme(axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
plot.margin = margin(0, 0, 0, 4.5, "cm"))
tema <- function(){
theme_minimal() +
theme(
text = element_text(family = "Open Sans", colour = "grey20"),
axis.text = element_text(family = "Open Sans", colour = "grey20", size = 16),
title = element_text(face = "bold", size = 16, color = "#1E4C7A"), # size para o Shiny
plot.subtitle = element_text(family = "Open Sans Condensed", face = "plain", size = 16),
plot.caption = element_text(face = "italic"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18),
axis.ticks = element_line(size = 0.5),
axis.ticks.length = unit(.25, "cm"),
axis.title = element_text(size = 16),
legend.position = 'bottom')
}
plot_estatico2 <- ggplot(dados_format, aes(y = Valor, x = rank)) +
geom_bar(aes(fill = CoresNormais), stat = 'identity') +
geom_text(aes(y = Valor + 0.005,
label = percent(round(Valor, 4)),
color = CoresEscuras), # color = CoresEscuras
position = position_dodge(1),
size = 6, family = "Open Sans Condensed Light", vjust = 'center') +  # color = '#1E4C7A') +
geom_text(aes(y=0, label = paste(Categoria_reduzida, " ")),
vjust = 0.2, hjust = 1, check_overlap = TRUE, family = "Open Sans", size = 4) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = percent) + #, expand = expand_scale(add = c(0.2,0)
scale_x_reverse() +
scale_fill_identity() +
scale_color_identity() +
labs(
x = NULL,
y = NULL,
title = NULL
) +
#geom_text(aes(label = Ano), x = 1, y = 0.05, size = 5) +
tema() +
theme(legend.position = 'none') + theme(axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
plot.margin = margin(0, 0, 0, 4.5, "cm"))
plot_estatico2
anim = plot_estatico2 + transition_states(Ano, transition_length = 4, state_length = 1) +
labs(title = 'Despesas da União : {closest_state}',
subtitle  =  "Em percentual do PIB",
caption  = "Fonte: Siafi") +
ease_aes('cubic-in-out')
animate(anim, nframes = 120, width = 688, height = 488,
renderer = gifski_renderer())
tema <- function(){
theme_minimal() +
theme(
text = element_text(family = "Open Sans", colour = "grey20"),
axis.text = element_text(family = "Open Sans", colour = "grey20", size = 16),
title = element_text(face = "bold", size = 16, color = "#1E4C7A"), # size para o Shiny
plot.subtitle = element_text(family = "Open Sans Condensed", face = "plain", size = 16,
colour = "grey20"),
plot.caption = element_text(face = "italic"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18),
axis.ticks = element_line(size = 0.5),
axis.ticks.length = unit(.25, "cm"),
axis.title = element_text(size = 16),
legend.position = 'bottom')
}
plot_estatico2 <- ggplot(dados_format, aes(y = Valor, x = rank)) +
geom_bar(aes(fill = CoresNormais), stat = 'identity') +
geom_text(aes(y = Valor + 0.005,
label = percent(round(Valor, 4)),
color = CoresEscuras), # color = CoresEscuras
position = position_dodge(1),
size = 6, family = "Open Sans Condensed Light", vjust = 'center') +  # color = '#1E4C7A') +
geom_text(aes(y=0, label = paste(Categoria_reduzida, " ")),
vjust = 0.2, hjust = 1, check_overlap = TRUE, family = "Open Sans", size = 4,
color = CoresEscuras) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = percent) + #, expand = expand_scale(add = c(0.2,0)
scale_x_reverse() +
scale_fill_identity() +
scale_color_identity() +
labs(
x = NULL,
y = NULL,
title = NULL
) +
#geom_text(aes(label = Ano), x = 1, y = 0.05, size = 5) +
tema() +
theme(legend.position = 'none') + theme(axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
plot.margin = margin(0, 0, 0, 4.5, "cm"))
plot_estatico2 <- ggplot(dados_format, aes(y = Valor, x = rank)) +
geom_bar(aes(fill = CoresNormais), stat = 'identity') +
geom_text(aes(y = Valor + 0.005,
label = percent(round(Valor, 4)),
color = CoresEscuras), # color = CoresEscuras
position = position_dodge(1),
size = 6, family = "Open Sans Condensed Light", vjust = 'center') +  # color = '#1E4C7A') +
geom_text(aes(y=0, label = paste(Categoria_reduzida, " "), color = CoresEscuras),
vjust = 0.2, hjust = 1, check_overlap = TRUE, family = "Open Sans", size = 4) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = percent) + #, expand = expand_scale(add = c(0.2,0)
scale_x_reverse() +
scale_fill_identity() +
scale_color_identity() +
labs(
x = NULL,
y = NULL,
title = NULL
) +
#geom_text(aes(label = Ano), x = 1, y = 0.05, size = 5) +
tema() +
theme(legend.position = 'none') + theme(axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
plot.margin = margin(0, 0, 0, 4.5, "cm"))
anim = plot_estatico2 + transition_states(Ano, transition_length = 4, state_length = 1) +
labs(title = 'Despesas da União : {closest_state}',
subtitle  =  "Em percentual do PIB",
caption  = "Fonte: Siafi") +
ease_aes('cubic-in-out')
animate(anim, nframes = 120, width = 788, height = 488,
renderer = gifski_renderer())
plot_estatico2 <- ggplot(dados_format, aes(y = Valor, x = rank)) +
geom_bar(aes(fill = CoresNormais), width = 0.8, stat = 'identity') +
geom_text(aes(y = Valor + 0.003,
label = percent(round(Valor, 4)),
color = CoresEscuras), # color = CoresEscuras
position = position_dodge(1),
size = 5, family = "Open Sans Condensed Light", vjust = 'center') +  # color = '#1E4C7A') +
geom_text(aes(y=0, label = paste(Categoria_reduzida, " "), color = CoresEscuras),
vjust = 0.2, hjust = 1, check_overlap = TRUE, family = "Open Sans", size = 4) +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = percent) + #, expand = expand_scale(add = c(0.2,0)
scale_x_reverse() +
scale_fill_identity() +
scale_color_identity() +
labs(
x = NULL,
y = NULL,
title = NULL
) +
#geom_text(aes(label = Ano), x = 1, y = 0.05, size = 5) +
tema() +
theme(legend.position = 'none') + theme(axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
plot.margin = margin(1, 2, 0, 4.5, "cm"))
plot_estatico2
anim = plot_estatico2 + transition_states(Ano, transition_length = 4, state_length = 1) +
labs(title = 'Despesas da União : {closest_state}',
subtitle  =  "Em percentual do PIB",
caption  = "Fonte: Siafi") +
ease_aes('cubic-in-out')
animate(anim, nframes = 120, width = 788, height = 488,
renderer = gifski_renderer())
anim_save("despesas_new.gif", animation = last_animation())
setwd("~/GitHub/learning-rstats/rayshader")
dados_ibge <- read_excel("ibge_mun.xls", sheet = "Variáveis externas")
library(rayshader)
library(ggplot2)
library(readxl)
dados_ibge <- read_excel("ibge_mun.xls", sheet = "Variáveis externas")
library(tidyverse)
install.packages("brazilmaps")
library(brazilmaps)
get_brmap("Country") %>% ggplot() + geom_sf()
get_brmap("Brazil") %>% ggplot() + geom_sf()
library(sf)
get_brmap("Brazil") %>% ggplot() + geom_sf()
get_brmap()
get_brmap("o")
get_brmap("City") %>% ggplot() + geom_sf()
mapa <- get_brmap("City")
mapa_dados <- mapa %>% inner_join(dados_ibge, c("City" = "CodMun"))
ggplot(mapa_dados) + geom_sf(fill = `POP EST`)
mapa_dados
mapa_dados <- mapa %>% inner_join(dados_ibge, c("City" = "CodMun")) %>% rename(pop = `POP EST`)
ggplot(mapa_dados) + geom_sf(fill = pop)
ggplot(mapa_dados) + geom_sf(aes(fill = pop))
install.packages("sf")
install.packages("sf")
library(rayshader)
library(ggplot2)
library(readxl)
library(tidyverse)
library(brazilmaps)
library(sf)
dados_ibge <- read_excel("ibge_mun.xls", sheet = "Variáveis externas")
mapa <- get_brmap("City")
mapa_dados <- mapa %>% inner_join(dados_ibge, c("City" = "CodMun")) %>% rename(pop = `POP EST`)
ggplot(mapa_dados) + geom_sf(aes(fill = pop))
library(sf)
install.packages("sf")
library(sf)
install.packages("brazilmaps")
install.packages("brazilmaps")
library(sf)
library(rayshader)
library(ggplot2)
library(readxl)
library(tidyverse)
library(brazilmaps)
dados_ibge <- read_excel("ibge_mun.xls", sheet = "Variáveis externas")
mapa <- get_brmap("City")
mapa_dados <- mapa %>% inner_join(dados_ibge, c("City" = "CodMun")) %>% rename(pop = `POP EST`)
ggplot(mapa_dados) + geom_sf(aes(fill = pop))
install.packages("sf")
install.packages("sf")
install.packages("rgdal")
library(rayshader)
library(ggplot2)
library(readxl)
library(tidyverse)
library(brazilmaps)
dados_ibge <- read_excel("ibge_mun.xls", sheet = "Variáveis externas")
mapa <- get_brmap("City")
mapa_dados <- mapa %>% inner_join(dados_ibge, c("City" = "CodMun")) %>% rename(pop = `POP EST`)
ggplot(mapa_dados) + geom_sf(aes(fill = pop))
library(sf)
